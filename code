#Matlab2017-a


%This is using the TA's code from the Mini Project and altering it to see if we can use it for our purposes
%Rat = N1
%Trial = 040624 Sc1_3

%I HAVEN'T TESTED ALL OF THIS
close all;
clear all;
load TrialEvents2.mat
load TrialEvents.mat
load Sc1_3.mat
stimuli = zeros (225,1);
trial_length = 3000; %in ms
n_trials = 16; % number of trials, has to be multiplier of 4
n_cell =13;
summary =[];
bin_size = 20; %ms
N = 150; % in bins
bin_count = trial_length/bin_size; % 3s per trial
%% Creating the stimulus matrix s(t)
for i = 1 : 225
 if Correct(i) == 1
 stimuli (i) = 1;
 elseif Correct(i) == 0
 stimuli (i) = 0;
 end
end
% Finding the index for each stimuli type
Correct = find(stimuli==1);
Incorrect = find(stimuli==0);

ss_index = [Correct(1:n_trials/2);Incorrect(1:n_trials/2)]; %creating a N trial sample of stimulus
FMS_values = [1];
FMS_values = repmat(FMS_values,n_trials/2,1);
ss_values = [FMS_values;FMS_values+1]; %assigning values to each stimuli
ss_values = ss_values - mean (ss_values); %normalizing the stimuli
ss_values = ss_values/std (ss_values);
ss_r = ss_index(randperm(length(ss_index))); % randomizing the trials order
% assign the correct values to stimulus after randomization
for i = 1 : n_trials
 s(i) = ss_values (find(ss_index == ss_r (i)));
end
%% Creating the spike trians (not needed in finding the filter)
% creating the spike train matrix, 16 (trials) x 13 (cells)
spike_count = zeros(13,1);
for i = 1:length(ss_r)
 for j = 1 : 13
 r_t_raw{i,j} = TS(ss_r(i));
 spike_count(j) = spike_count(j) + length (TS(ss_r(i)));
 end
end
% converting the spike trains into 1 (time) x 13 (cells) matrix
r_t = zeros(13,max(spike_count));
for i = 1 : 13
 r_t_c = [];
 for j = 1 : length(ss_r)
 temp = r_t_raw {j,i} + 1500; %adding 1500ms to trial spike times to make it relative to start of recording
 r_t_c = [r_t_c,(j-1)*3000+temp']; % each trial is 3000 ms
 end
 r_t(i,(1:length (r_t_c))) = r_t_c;
end
%Plotting the spike trains
r_t = round(r_t);
tt = n_trials * 3000; % total recording time in ms
spike_train = zeros(1,tt);
%figure;
for i = 1 : 13
 spike_train (r_t(i,find(r_t(i,:) ~= 0))) = 1;
% figure;
% plot(spike_train(1:3000));
end
st= s;
N = 150; % in bins
for filter_run = 1 : 10
 bin_size = 110; %ms
for binsize_run = 1 : 10
%% Creating the response matrix R
r = zeros (n_trials*bin_count,13); % the response matrix with trials and bins
M = n_trials*bin_count - N + 1;
R = zeros (M,(13*N) + 1);
f = zeros (size(R,2),1);
for i = 1:n_trials
 for j = 1: bin_count
 s((i-1)*bin_count + j) = st(i);
 end
end
%figure;
%plot (s);
%title (['Gaussian Stimulus, ' num2str(n_trials) ' Trials']);
%xlabel ('Time');
%ylabel ('s(t)');
% constructing r
for i = 1 : 13 % num of cells
 for j = 1 : n_trials
 temp = r_t_raw {j,i};
 for k = 1 : bin_count
 low = -1100+ bin_size*(k-1);
 high = (-1100+ bin_size*k);
 temp2 = temp (temp > low & temp < high);
 r((j-1)*bin_count + k,i) = length (temp2);
 end
 end
end
% creating R matrix
for i = 1: M
 for j = 1: 13*N +1
 bin_num = mod((j-2),N) + i;
 cell_num = floor((j-2)/N)+1;
 if (j==1)
 R(i,j) = 1;
 else
 R(i,j) = r (bin_num,cell_num);
 end
 end
end
% u is the reconstructed signal
% f is the filter
s = s(1:M);
temp = inv(R'*R);
f = temp *(R'*s');
u = R*f;
% u_round = u;
%
% I = find (u_round < -0.866);
% u_round (I) = -1.3;
% I = find (u_round < 0 & u_round > -0.866);
% u_round (I) = -0.433;
% I = find ( u_round > 0 & u_round < 0.866);
% u_round(I) = 0.433;
% I = find ( u_round > 0.8666);
% u_round(I) = 1.3;
%figure;
%plot (s);
%title (['Gaussian Stimulus ' num2str(n_trials) ' Trials'],'FontSize',14);
%xlabel ('Time','FontSize', 14);
%ylabel ('s(t)','FontSize', 14);
%figure;
%plot (u);
%title (['Reconstructed Stimulus, Filter Length = ' num2str(N) ' ' ])
%bin size = ' num2str(bin_size)],'FontSize', 14);
%xlabel ('Time','FontSize', 14);
%ylabel ('r(t)','FontSize', 14);
save ('filter_coeffs','f');
MSE = mean ((u-s').^2); % Calculating MSE
summary = [summary;bin_size,N,MSE];
bin_size = bin_size + 10; %ms
end
N = N -10;
end

figure;
plot (s);
title (['Gaussian Stimulus, ' num2str(n_trials) ' Trials']);
xlabel ('Time');
ylabel ('s(t)');
% constructing r

figure;
plot (s);
title (['Gaussian Stimulus ' num2str(n_trials) ' Trials'],'FontSize',14);
xlabel ('Time','FontSize', 14);
ylabel ('s(t)','FontSize', 14);
figure;
plot (u);
%title (['Reconstructed Stimulus, Filter Length = ' num2str(N) ' ' ])
%bin size = ' num2str(bin_size)],'FontSize', 14);
xlabel ('Time','FontSize', 14);
ylabel ('r(t)','FontSize', 14);

x = summary(:,1);
y = summary(:,2);
z = summary(:,3);
figure;
imagesc(x,y,z);
colorbar;
axis ([min(x) max(x) min(y) max(y)])
xlabel('bin size (ms)', 'FontSize', 14);
ylabel('filter length', 'FontSize', 14);
h = colorbar;
ylabel(h, 'MSE', 'FontSize', 14);
title('MSE for different filter and bin sizes', 'FontSize', 14);
x = x(1:10);
y = y(1:10);
z = z(1:10);
figure;
plot(x,z);
xlabel('bin size (ms)', 'FontSize', 14);
ylabel('MSE', 'FontSize', 14);
title('MSE for different bin sizes and filter length = 150', 'FontSize', 14);
